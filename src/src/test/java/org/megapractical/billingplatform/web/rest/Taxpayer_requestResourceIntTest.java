package org.megapractical.billingplatform.web.rest;

import org.megapractical.billingplatform.MegabillingplatformApp;
import org.megapractical.billingplatform.domain.Taxpayer_request;
import org.megapractical.billingplatform.repository.Taxpayer_requestRepository;
import org.megapractical.billingplatform.service.Taxpayer_requestService;

import org.junit.Before;
import org.junit.Test;
import org.junit.runner.RunWith;
import static org.hamcrest.Matchers.hasItem;
import org.mockito.MockitoAnnotations;
import org.springframework.boot.test.IntegrationTest;
import org.springframework.boot.test.SpringApplicationConfiguration;
import org.springframework.http.MediaType;
import org.springframework.http.converter.json.MappingJackson2HttpMessageConverter;
import org.springframework.data.web.PageableHandlerMethodArgumentResolver;
import org.springframework.test.context.junit4.SpringJUnit4ClassRunner;
import org.springframework.test.context.web.WebAppConfiguration;
import org.springframework.test.util.ReflectionTestUtils;
import org.springframework.test.web.servlet.MockMvc;
import org.springframework.test.web.servlet.setup.MockMvcBuilders;
import org.springframework.transaction.annotation.Transactional;

import javax.annotation.PostConstruct;
import javax.inject.Inject;
import java.math.BigDecimal;;
import java.util.List;

import static org.assertj.core.api.Assertions.assertThat;
import static org.springframework.test.web.servlet.request.MockMvcRequestBuilders.*;
import static org.springframework.test.web.servlet.result.MockMvcResultMatchers.*;


/**
 * Test class for the Taxpayer_requestResource REST controller.
 *
 * @see Taxpayer_requestResource
 */
@RunWith(SpringJUnit4ClassRunner.class)
@SpringApplicationConfiguration(classes = MegabillingplatformApp.class)
@WebAppConfiguration
@IntegrationTest
public class Taxpayer_requestResourceIntTest {


    private static final Long DEFAULT_ACCOUNT_ID = 1L;
    private static final Long UPDATED_ACCOUNT_ID = 2L;

    private static final Long DEFAULT_RING_PACK_ID = 1L;
    private static final Long UPDATED_RING_PACK_ID = 2L;
    private static final String DEFAULT_ALGORITHM_SIGNATURE = "AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA";
    private static final String UPDATED_ALGORITHM_SIGNATURE = "BBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBB";

    private static final BigDecimal DEFAULT_AMOUNT = new BigDecimal(1);
    private static final BigDecimal UPDATED_AMOUNT = new BigDecimal(2);
    private static final String DEFAULT_BILLING_ADDRESS = "AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA";
    private static final String UPDATED_BILLING_ADDRESS = "BBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBB";
    private static final String DEFAULT_BILLING_CITY = "AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA";
    private static final String UPDATED_BILLING_CITY = "BBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBB";
    private static final String DEFAULT_BILLING_COUNTRY = "AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA";
    private static final String UPDATED_BILLING_COUNTRY = "BBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBB";
    private static final String DEFAULT_BUYER_EMAIL = "AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA";
    private static final String UPDATED_BUYER_EMAIL = "BBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBB";
    private static final String DEFAULT_BUYER_FULL_NAME = "AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA";
    private static final String UPDATED_BUYER_FULL_NAME = "BBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBB";
    private static final String DEFAULT_CONFIRMATION_URL = "AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA";
    private static final String UPDATED_CONFIRMATION_URL = "BBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBB";
    private static final String DEFAULT_CURRENCY = "AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA";
    private static final String UPDATED_CURRENCY = "BBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBB";
    private static final String DEFAULT_DESCRIPTION = "AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA";
    private static final String UPDATED_DESCRIPTION = "BBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBB";

    private static final BigDecimal DEFAULT_DISCOUNT = new BigDecimal(1);
    private static final BigDecimal UPDATED_DISCOUNT = new BigDecimal(2);
    private static final String DEFAULT_EXTRA_1 = "AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA";
    private static final String UPDATED_EXTRA_1 = "BBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBB";
    private static final String DEFAULT_EXTRA_2 = "AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA";
    private static final String UPDATED_EXTRA_2 = "BBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBB";
    private static final String DEFAULT_EXTRA_3 = "AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA";
    private static final String UPDATED_EXTRA_3 = "BBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBB";
    private static final String DEFAULT_LNG = "AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA";
    private static final String UPDATED_LNG = "BBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBB";

    private static final Integer DEFAULT_MERCHANT_ID = 1;
    private static final Integer UPDATED_MERCHANT_ID = 2;
    private static final String DEFAULT_MOBILE_PHONE = "AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA";
    private static final String UPDATED_MOBILE_PHONE = "BBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBB";
    private static final String DEFAULT_OFFICE_TELEPHONE = "AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA";
    private static final String UPDATED_OFFICE_TELEPHONE = "BBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBB";
    private static final String DEFAULT_PAYER_DOCUMENT = "AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA";
    private static final String UPDATED_PAYER_DOCUMENT = "BBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBB";
    private static final String DEFAULT_PAYER_EMAIL = "AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA";
    private static final String UPDATED_PAYER_EMAIL = "BBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBB";
    private static final String DEFAULT_PAYER_FULL_NAME = "AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA";
    private static final String UPDATED_PAYER_FULL_NAME = "BBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBB";
    private static final String DEFAULT_PAYER_MOBILE_PHONE = "AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA";
    private static final String UPDATED_PAYER_MOBILE_PHONE = "BBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBB";
    private static final String DEFAULT_PAYER_OFFICE_PHONE = "AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA";
    private static final String UPDATED_PAYER_OFFICE_PHONE = "BBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBB";
    private static final String DEFAULT_PAYER_PHONE = "AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA";
    private static final String UPDATED_PAYER_PHONE = "BBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBB";
    private static final String DEFAULT_REFERENCE_CODE = "AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA";
    private static final String UPDATED_REFERENCE_CODE = "BBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBB";
    private static final String DEFAULT_RESPONSE_URL = "AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA";
    private static final String UPDATED_RESPONSE_URL = "BBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBB";
    private static final String DEFAULT_SHIPPING_ADDRESS = "AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA";
    private static final String UPDATED_SHIPPING_ADDRESS = "BBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBB";
    private static final String DEFAULT_SHIPPING_CITY = "AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA";
    private static final String UPDATED_SHIPPING_CITY = "BBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBB";
    private static final String DEFAULT_SHIPPING_COUNTRY = "AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA";
    private static final String UPDATED_SHIPPING_COUNTRY = "BBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBB";
    private static final String DEFAULT_SIGNATURE = "AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA";
    private static final String UPDATED_SIGNATURE = "BBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBB";

    private static final BigDecimal DEFAULT_TAX = new BigDecimal(1);
    private static final BigDecimal UPDATED_TAX = new BigDecimal(2);

    private static final BigDecimal DEFAULT_TAX_RETURN_BASE = new BigDecimal(1);
    private static final BigDecimal UPDATED_TAX_RETURN_BASE = new BigDecimal(2);
    private static final String DEFAULT_TELEPHONE = "AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA";
    private static final String UPDATED_TELEPHONE = "BBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBB";

    private static final Integer DEFAULT_TEST = 1;
    private static final Integer UPDATED_TEST = 2;
    private static final String DEFAULT_ZIPCODE = "AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA";
    private static final String UPDATED_ZIPCODE = "BBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBB";

    @Inject
    private Taxpayer_requestRepository taxpayer_requestRepository;

    @Inject
    private Taxpayer_requestService taxpayer_requestService;

    @Inject
    private MappingJackson2HttpMessageConverter jacksonMessageConverter;

    @Inject
    private PageableHandlerMethodArgumentResolver pageableArgumentResolver;

    private MockMvc restTaxpayer_requestMockMvc;

    private Taxpayer_request taxpayer_request;

    @PostConstruct
    public void setup() {
        MockitoAnnotations.initMocks(this);
        Taxpayer_requestResource taxpayer_requestResource = new Taxpayer_requestResource();
        ReflectionTestUtils.setField(taxpayer_requestResource, "taxpayer_requestService", taxpayer_requestService);
        this.restTaxpayer_requestMockMvc = MockMvcBuilders.standaloneSetup(taxpayer_requestResource)
            .setCustomArgumentResolvers(pageableArgumentResolver)
            .setMessageConverters(jacksonMessageConverter).build();
    }

    @Before
    public void initTest() {
        taxpayer_request = new Taxpayer_request();
        taxpayer_request.setAccount_id(DEFAULT_ACCOUNT_ID);
        taxpayer_request.setRing_pack_id(DEFAULT_RING_PACK_ID);
        taxpayer_request.setAlgorithm_signature(DEFAULT_ALGORITHM_SIGNATURE);
        taxpayer_request.setAmount(DEFAULT_AMOUNT);
        taxpayer_request.setBilling_address(DEFAULT_BILLING_ADDRESS);
        taxpayer_request.setBilling_city(DEFAULT_BILLING_CITY);
        taxpayer_request.setBilling_country(DEFAULT_BILLING_COUNTRY);
        taxpayer_request.setBuyer_email(DEFAULT_BUYER_EMAIL);
        taxpayer_request.setBuyer_full_name(DEFAULT_BUYER_FULL_NAME);
        taxpayer_request.setConfirmation_url(DEFAULT_CONFIRMATION_URL);
        taxpayer_request.setCurrency(DEFAULT_CURRENCY);
        taxpayer_request.setDescription(DEFAULT_DESCRIPTION);
        taxpayer_request.setDiscount(DEFAULT_DISCOUNT);
        taxpayer_request.setExtra1(DEFAULT_EXTRA_1);
        taxpayer_request.setExtra2(DEFAULT_EXTRA_2);
        taxpayer_request.setExtra3(DEFAULT_EXTRA_3);
        taxpayer_request.setLng(DEFAULT_LNG);
        taxpayer_request.setMerchant_id(DEFAULT_MERCHANT_ID);
        taxpayer_request.setMobile_phone(DEFAULT_MOBILE_PHONE);
        taxpayer_request.setOffice_telephone(DEFAULT_OFFICE_TELEPHONE);
        taxpayer_request.setPayer_document(DEFAULT_PAYER_DOCUMENT);
        taxpayer_request.setPayer_email(DEFAULT_PAYER_EMAIL);
        taxpayer_request.setPayer_full_name(DEFAULT_PAYER_FULL_NAME);
        taxpayer_request.setPayer_mobile_phone(DEFAULT_PAYER_MOBILE_PHONE);
        taxpayer_request.setPayer_office_phone(DEFAULT_PAYER_OFFICE_PHONE);
        taxpayer_request.setPayer_phone(DEFAULT_PAYER_PHONE);
        taxpayer_request.setReference_code(DEFAULT_REFERENCE_CODE);
        taxpayer_request.setResponse_url(DEFAULT_RESPONSE_URL);
        taxpayer_request.setShipping_address(DEFAULT_SHIPPING_ADDRESS);
        taxpayer_request.setShipping_city(DEFAULT_SHIPPING_CITY);
        taxpayer_request.setShipping_country(DEFAULT_SHIPPING_COUNTRY);
        taxpayer_request.setSignature(DEFAULT_SIGNATURE);
        taxpayer_request.setTax(DEFAULT_TAX);
        taxpayer_request.setTax_return_base(DEFAULT_TAX_RETURN_BASE);
        taxpayer_request.setTelephone(DEFAULT_TELEPHONE);
        taxpayer_request.setTest(DEFAULT_TEST);
        taxpayer_request.setZipcode(DEFAULT_ZIPCODE);
    }

    @Test
    @Transactional
    public void createTaxpayer_request() throws Exception {
        int databaseSizeBeforeCreate = taxpayer_requestRepository.findAll().size();

        // Create the Taxpayer_request

        restTaxpayer_requestMockMvc.perform(post("/api/taxpayer-requests")
                .contentType(TestUtil.APPLICATION_JSON_UTF8)
                .content(TestUtil.convertObjectToJsonBytes(taxpayer_request)))
                .andExpect(status().isCreated());

        // Validate the Taxpayer_request in the database
        List<Taxpayer_request> taxpayer_requests = taxpayer_requestRepository.findAll();
        assertThat(taxpayer_requests).hasSize(databaseSizeBeforeCreate + 1);
        Taxpayer_request testTaxpayer_request = taxpayer_requests.get(taxpayer_requests.size() - 1);
        assertThat(testTaxpayer_request.getAccount_id()).isEqualTo(DEFAULT_ACCOUNT_ID);
        assertThat(testTaxpayer_request.getRing_pack_id()).isEqualTo(DEFAULT_RING_PACK_ID);
        assertThat(testTaxpayer_request.getAlgorithm_signature()).isEqualTo(DEFAULT_ALGORITHM_SIGNATURE);
        assertThat(testTaxpayer_request.getAmount()).isEqualTo(DEFAULT_AMOUNT);
        assertThat(testTaxpayer_request.getBilling_address()).isEqualTo(DEFAULT_BILLING_ADDRESS);
        assertThat(testTaxpayer_request.getBilling_city()).isEqualTo(DEFAULT_BILLING_CITY);
        assertThat(testTaxpayer_request.getBilling_country()).isEqualTo(DEFAULT_BILLING_COUNTRY);
        assertThat(testTaxpayer_request.getBuyer_email()).isEqualTo(DEFAULT_BUYER_EMAIL);
        assertThat(testTaxpayer_request.getBuyer_full_name()).isEqualTo(DEFAULT_BUYER_FULL_NAME);
        assertThat(testTaxpayer_request.getConfirmation_url()).isEqualTo(DEFAULT_CONFIRMATION_URL);
        assertThat(testTaxpayer_request.getCurrency()).isEqualTo(DEFAULT_CURRENCY);
        assertThat(testTaxpayer_request.getDescription()).isEqualTo(DEFAULT_DESCRIPTION);
        assertThat(testTaxpayer_request.getDiscount()).isEqualTo(DEFAULT_DISCOUNT);
        assertThat(testTaxpayer_request.getExtra1()).isEqualTo(DEFAULT_EXTRA_1);
        assertThat(testTaxpayer_request.getExtra2()).isEqualTo(DEFAULT_EXTRA_2);
        assertThat(testTaxpayer_request.getExtra3()).isEqualTo(DEFAULT_EXTRA_3);
        assertThat(testTaxpayer_request.getLng()).isEqualTo(DEFAULT_LNG);
        assertThat(testTaxpayer_request.getMerchant_id()).isEqualTo(DEFAULT_MERCHANT_ID);
        assertThat(testTaxpayer_request.getMobile_phone()).isEqualTo(DEFAULT_MOBILE_PHONE);
        assertThat(testTaxpayer_request.getOffice_telephone()).isEqualTo(DEFAULT_OFFICE_TELEPHONE);
        assertThat(testTaxpayer_request.getPayer_document()).isEqualTo(DEFAULT_PAYER_DOCUMENT);
        assertThat(testTaxpayer_request.getPayer_email()).isEqualTo(DEFAULT_PAYER_EMAIL);
        assertThat(testTaxpayer_request.getPayer_full_name()).isEqualTo(DEFAULT_PAYER_FULL_NAME);
        assertThat(testTaxpayer_request.getPayer_mobile_phone()).isEqualTo(DEFAULT_PAYER_MOBILE_PHONE);
        assertThat(testTaxpayer_request.getPayer_office_phone()).isEqualTo(DEFAULT_PAYER_OFFICE_PHONE);
        assertThat(testTaxpayer_request.getPayer_phone()).isEqualTo(DEFAULT_PAYER_PHONE);
        assertThat(testTaxpayer_request.getReference_code()).isEqualTo(DEFAULT_REFERENCE_CODE);
        assertThat(testTaxpayer_request.getResponse_url()).isEqualTo(DEFAULT_RESPONSE_URL);
        assertThat(testTaxpayer_request.getShipping_address()).isEqualTo(DEFAULT_SHIPPING_ADDRESS);
        assertThat(testTaxpayer_request.getShipping_city()).isEqualTo(DEFAULT_SHIPPING_CITY);
        assertThat(testTaxpayer_request.getShipping_country()).isEqualTo(DEFAULT_SHIPPING_COUNTRY);
        assertThat(testTaxpayer_request.getSignature()).isEqualTo(DEFAULT_SIGNATURE);
        assertThat(testTaxpayer_request.getTax()).isEqualTo(DEFAULT_TAX);
        assertThat(testTaxpayer_request.getTax_return_base()).isEqualTo(DEFAULT_TAX_RETURN_BASE);
        assertThat(testTaxpayer_request.getTelephone()).isEqualTo(DEFAULT_TELEPHONE);
        assertThat(testTaxpayer_request.getTest()).isEqualTo(DEFAULT_TEST);
        assertThat(testTaxpayer_request.getZipcode()).isEqualTo(DEFAULT_ZIPCODE);
    }

    @Test
    @Transactional
    public void getAllTaxpayer_requests() throws Exception {
        // Initialize the database
        taxpayer_requestRepository.saveAndFlush(taxpayer_request);

        // Get all the taxpayer_requests
        restTaxpayer_requestMockMvc.perform(get("/api/taxpayer-requests?sort=id,desc"))
                .andExpect(status().isOk())
                .andExpect(content().contentType(MediaType.APPLICATION_JSON))
                .andExpect(jsonPath("$.[*].id").value(hasItem(taxpayer_request.getId().intValue())))
                .andExpect(jsonPath("$.[*].account_id").value(hasItem(DEFAULT_ACCOUNT_ID.intValue())))
                .andExpect(jsonPath("$.[*].ring_pack_id").value(hasItem(DEFAULT_RING_PACK_ID.intValue())))
                .andExpect(jsonPath("$.[*].algorithm_signature").value(hasItem(DEFAULT_ALGORITHM_SIGNATURE.toString())))
                .andExpect(jsonPath("$.[*].amount").value(hasItem(DEFAULT_AMOUNT.intValue())))
                .andExpect(jsonPath("$.[*].billing_address").value(hasItem(DEFAULT_BILLING_ADDRESS.toString())))
                .andExpect(jsonPath("$.[*].billing_city").value(hasItem(DEFAULT_BILLING_CITY.toString())))
                .andExpect(jsonPath("$.[*].billing_country").value(hasItem(DEFAULT_BILLING_COUNTRY.toString())))
                .andExpect(jsonPath("$.[*].buyer_email").value(hasItem(DEFAULT_BUYER_EMAIL.toString())))
                .andExpect(jsonPath("$.[*].buyer_full_name").value(hasItem(DEFAULT_BUYER_FULL_NAME.toString())))
                .andExpect(jsonPath("$.[*].confirmation_url").value(hasItem(DEFAULT_CONFIRMATION_URL.toString())))
                .andExpect(jsonPath("$.[*].currency").value(hasItem(DEFAULT_CURRENCY.toString())))
                .andExpect(jsonPath("$.[*].description").value(hasItem(DEFAULT_DESCRIPTION.toString())))
                .andExpect(jsonPath("$.[*].discount").value(hasItem(DEFAULT_DISCOUNT.intValue())))
                .andExpect(jsonPath("$.[*].extra1").value(hasItem(DEFAULT_EXTRA_1.toString())))
                .andExpect(jsonPath("$.[*].extra2").value(hasItem(DEFAULT_EXTRA_2.toString())))
                .andExpect(jsonPath("$.[*].extra3").value(hasItem(DEFAULT_EXTRA_3.toString())))
                .andExpect(jsonPath("$.[*].lng").value(hasItem(DEFAULT_LNG.toString())))
                .andExpect(jsonPath("$.[*].merchant_id").value(hasItem(DEFAULT_MERCHANT_ID)))
                .andExpect(jsonPath("$.[*].mobile_phone").value(hasItem(DEFAULT_MOBILE_PHONE.toString())))
                .andExpect(jsonPath("$.[*].office_telephone").value(hasItem(DEFAULT_OFFICE_TELEPHONE.toString())))
                .andExpect(jsonPath("$.[*].payer_document").value(hasItem(DEFAULT_PAYER_DOCUMENT.toString())))
                .andExpect(jsonPath("$.[*].payer_email").value(hasItem(DEFAULT_PAYER_EMAIL.toString())))
                .andExpect(jsonPath("$.[*].payer_full_name").value(hasItem(DEFAULT_PAYER_FULL_NAME.toString())))
                .andExpect(jsonPath("$.[*].payer_mobile_phone").value(hasItem(DEFAULT_PAYER_MOBILE_PHONE.toString())))
                .andExpect(jsonPath("$.[*].payer_office_phone").value(hasItem(DEFAULT_PAYER_OFFICE_PHONE.toString())))
                .andExpect(jsonPath("$.[*].payer_phone").value(hasItem(DEFAULT_PAYER_PHONE.toString())))
                .andExpect(jsonPath("$.[*].reference_code").value(hasItem(DEFAULT_REFERENCE_CODE.toString())))
                .andExpect(jsonPath("$.[*].response_url").value(hasItem(DEFAULT_RESPONSE_URL.toString())))
                .andExpect(jsonPath("$.[*].shipping_address").value(hasItem(DEFAULT_SHIPPING_ADDRESS.toString())))
                .andExpect(jsonPath("$.[*].shipping_city").value(hasItem(DEFAULT_SHIPPING_CITY.toString())))
                .andExpect(jsonPath("$.[*].shipping_country").value(hasItem(DEFAULT_SHIPPING_COUNTRY.toString())))
                .andExpect(jsonPath("$.[*].signature").value(hasItem(DEFAULT_SIGNATURE.toString())))
                .andExpect(jsonPath("$.[*].tax").value(hasItem(DEFAULT_TAX.intValue())))
                .andExpect(jsonPath("$.[*].tax_return_base").value(hasItem(DEFAULT_TAX_RETURN_BASE.intValue())))
                .andExpect(jsonPath("$.[*].telephone").value(hasItem(DEFAULT_TELEPHONE.toString())))
                .andExpect(jsonPath("$.[*].test").value(hasItem(DEFAULT_TEST)))
                .andExpect(jsonPath("$.[*].zipcode").value(hasItem(DEFAULT_ZIPCODE.toString())));
    }

    @Test
    @Transactional
    public void getTaxpayer_request() throws Exception {
        // Initialize the database
        taxpayer_requestRepository.saveAndFlush(taxpayer_request);

        // Get the taxpayer_request
        restTaxpayer_requestMockMvc.perform(get("/api/taxpayer-requests/{id}", taxpayer_request.getId()))
            .andExpect(status().isOk())
            .andExpect(content().contentType(MediaType.APPLICATION_JSON))
            .andExpect(jsonPath("$.id").value(taxpayer_request.getId().intValue()))
            .andExpect(jsonPath("$.account_id").value(DEFAULT_ACCOUNT_ID.intValue()))
            .andExpect(jsonPath("$.ring_pack_id").value(DEFAULT_RING_PACK_ID.intValue()))
            .andExpect(jsonPath("$.algorithm_signature").value(DEFAULT_ALGORITHM_SIGNATURE.toString()))
            .andExpect(jsonPath("$.amount").value(DEFAULT_AMOUNT.intValue()))
            .andExpect(jsonPath("$.billing_address").value(DEFAULT_BILLING_ADDRESS.toString()))
            .andExpect(jsonPath("$.billing_city").value(DEFAULT_BILLING_CITY.toString()))
            .andExpect(jsonPath("$.billing_country").value(DEFAULT_BILLING_COUNTRY.toString()))
            .andExpect(jsonPath("$.buyer_email").value(DEFAULT_BUYER_EMAIL.toString()))
            .andExpect(jsonPath("$.buyer_full_name").value(DEFAULT_BUYER_FULL_NAME.toString()))
            .andExpect(jsonPath("$.confirmation_url").value(DEFAULT_CONFIRMATION_URL.toString()))
            .andExpect(jsonPath("$.currency").value(DEFAULT_CURRENCY.toString()))
            .andExpect(jsonPath("$.description").value(DEFAULT_DESCRIPTION.toString()))
            .andExpect(jsonPath("$.discount").value(DEFAULT_DISCOUNT.intValue()))
            .andExpect(jsonPath("$.extra1").value(DEFAULT_EXTRA_1.toString()))
            .andExpect(jsonPath("$.extra2").value(DEFAULT_EXTRA_2.toString()))
            .andExpect(jsonPath("$.extra3").value(DEFAULT_EXTRA_3.toString()))
            .andExpect(jsonPath("$.lng").value(DEFAULT_LNG.toString()))
            .andExpect(jsonPath("$.merchant_id").value(DEFAULT_MERCHANT_ID))
            .andExpect(jsonPath("$.mobile_phone").value(DEFAULT_MOBILE_PHONE.toString()))
            .andExpect(jsonPath("$.office_telephone").value(DEFAULT_OFFICE_TELEPHONE.toString()))
            .andExpect(jsonPath("$.payer_document").value(DEFAULT_PAYER_DOCUMENT.toString()))
            .andExpect(jsonPath("$.payer_email").value(DEFAULT_PAYER_EMAIL.toString()))
            .andExpect(jsonPath("$.payer_full_name").value(DEFAULT_PAYER_FULL_NAME.toString()))
            .andExpect(jsonPath("$.payer_mobile_phone").value(DEFAULT_PAYER_MOBILE_PHONE.toString()))
            .andExpect(jsonPath("$.payer_office_phone").value(DEFAULT_PAYER_OFFICE_PHONE.toString()))
            .andExpect(jsonPath("$.payer_phone").value(DEFAULT_PAYER_PHONE.toString()))
            .andExpect(jsonPath("$.reference_code").value(DEFAULT_REFERENCE_CODE.toString()))
            .andExpect(jsonPath("$.response_url").value(DEFAULT_RESPONSE_URL.toString()))
            .andExpect(jsonPath("$.shipping_address").value(DEFAULT_SHIPPING_ADDRESS.toString()))
            .andExpect(jsonPath("$.shipping_city").value(DEFAULT_SHIPPING_CITY.toString()))
            .andExpect(jsonPath("$.shipping_country").value(DEFAULT_SHIPPING_COUNTRY.toString()))
            .andExpect(jsonPath("$.signature").value(DEFAULT_SIGNATURE.toString()))
            .andExpect(jsonPath("$.tax").value(DEFAULT_TAX.intValue()))
            .andExpect(jsonPath("$.tax_return_base").value(DEFAULT_TAX_RETURN_BASE.intValue()))
            .andExpect(jsonPath("$.telephone").value(DEFAULT_TELEPHONE.toString()))
            .andExpect(jsonPath("$.test").value(DEFAULT_TEST))
            .andExpect(jsonPath("$.zipcode").value(DEFAULT_ZIPCODE.toString()));
    }

    @Test
    @Transactional
    public void getNonExistingTaxpayer_request() throws Exception {
        // Get the taxpayer_request
        restTaxpayer_requestMockMvc.perform(get("/api/taxpayer-requests/{id}", Long.MAX_VALUE))
                .andExpect(status().isNotFound());
    }

    @Test
    @Transactional
    public void updateTaxpayer_request() throws Exception {
        // Initialize the database
        taxpayer_requestService.save(taxpayer_request);

        int databaseSizeBeforeUpdate = taxpayer_requestRepository.findAll().size();

        // Update the taxpayer_request
        Taxpayer_request updatedTaxpayer_request = new Taxpayer_request();
        updatedTaxpayer_request.setId(taxpayer_request.getId());
        updatedTaxpayer_request.setAccount_id(UPDATED_ACCOUNT_ID);
        updatedTaxpayer_request.setRing_pack_id(UPDATED_RING_PACK_ID);
        updatedTaxpayer_request.setAlgorithm_signature(UPDATED_ALGORITHM_SIGNATURE);
        updatedTaxpayer_request.setAmount(UPDATED_AMOUNT);
        updatedTaxpayer_request.setBilling_address(UPDATED_BILLING_ADDRESS);
        updatedTaxpayer_request.setBilling_city(UPDATED_BILLING_CITY);
        updatedTaxpayer_request.setBilling_country(UPDATED_BILLING_COUNTRY);
        updatedTaxpayer_request.setBuyer_email(UPDATED_BUYER_EMAIL);
        updatedTaxpayer_request.setBuyer_full_name(UPDATED_BUYER_FULL_NAME);
        updatedTaxpayer_request.setConfirmation_url(UPDATED_CONFIRMATION_URL);
        updatedTaxpayer_request.setCurrency(UPDATED_CURRENCY);
        updatedTaxpayer_request.setDescription(UPDATED_DESCRIPTION);
        updatedTaxpayer_request.setDiscount(UPDATED_DISCOUNT);
        updatedTaxpayer_request.setExtra1(UPDATED_EXTRA_1);
        updatedTaxpayer_request.setExtra2(UPDATED_EXTRA_2);
        updatedTaxpayer_request.setExtra3(UPDATED_EXTRA_3);
        updatedTaxpayer_request.setLng(UPDATED_LNG);
        updatedTaxpayer_request.setMerchant_id(UPDATED_MERCHANT_ID);
        updatedTaxpayer_request.setMobile_phone(UPDATED_MOBILE_PHONE);
        updatedTaxpayer_request.setOffice_telephone(UPDATED_OFFICE_TELEPHONE);
        updatedTaxpayer_request.setPayer_document(UPDATED_PAYER_DOCUMENT);
        updatedTaxpayer_request.setPayer_email(UPDATED_PAYER_EMAIL);
        updatedTaxpayer_request.setPayer_full_name(UPDATED_PAYER_FULL_NAME);
        updatedTaxpayer_request.setPayer_mobile_phone(UPDATED_PAYER_MOBILE_PHONE);
        updatedTaxpayer_request.setPayer_office_phone(UPDATED_PAYER_OFFICE_PHONE);
        updatedTaxpayer_request.setPayer_phone(UPDATED_PAYER_PHONE);
        updatedTaxpayer_request.setReference_code(UPDATED_REFERENCE_CODE);
        updatedTaxpayer_request.setResponse_url(UPDATED_RESPONSE_URL);
        updatedTaxpayer_request.setShipping_address(UPDATED_SHIPPING_ADDRESS);
        updatedTaxpayer_request.setShipping_city(UPDATED_SHIPPING_CITY);
        updatedTaxpayer_request.setShipping_country(UPDATED_SHIPPING_COUNTRY);
        updatedTaxpayer_request.setSignature(UPDATED_SIGNATURE);
        updatedTaxpayer_request.setTax(UPDATED_TAX);
        updatedTaxpayer_request.setTax_return_base(UPDATED_TAX_RETURN_BASE);
        updatedTaxpayer_request.setTelephone(UPDATED_TELEPHONE);
        updatedTaxpayer_request.setTest(UPDATED_TEST);
        updatedTaxpayer_request.setZipcode(UPDATED_ZIPCODE);

        restTaxpayer_requestMockMvc.perform(put("/api/taxpayer-requests")
                .contentType(TestUtil.APPLICATION_JSON_UTF8)
                .content(TestUtil.convertObjectToJsonBytes(updatedTaxpayer_request)))
                .andExpect(status().isOk());

        // Validate the Taxpayer_request in the database
        List<Taxpayer_request> taxpayer_requests = taxpayer_requestRepository.findAll();
        assertThat(taxpayer_requests).hasSize(databaseSizeBeforeUpdate);
        Taxpayer_request testTaxpayer_request = taxpayer_requests.get(taxpayer_requests.size() - 1);
        assertThat(testTaxpayer_request.getAccount_id()).isEqualTo(UPDATED_ACCOUNT_ID);
        assertThat(testTaxpayer_request.getRing_pack_id()).isEqualTo(UPDATED_RING_PACK_ID);
        assertThat(testTaxpayer_request.getAlgorithm_signature()).isEqualTo(UPDATED_ALGORITHM_SIGNATURE);
        assertThat(testTaxpayer_request.getAmount()).isEqualTo(UPDATED_AMOUNT);
        assertThat(testTaxpayer_request.getBilling_address()).isEqualTo(UPDATED_BILLING_ADDRESS);
        assertThat(testTaxpayer_request.getBilling_city()).isEqualTo(UPDATED_BILLING_CITY);
        assertThat(testTaxpayer_request.getBilling_country()).isEqualTo(UPDATED_BILLING_COUNTRY);
        assertThat(testTaxpayer_request.getBuyer_email()).isEqualTo(UPDATED_BUYER_EMAIL);
        assertThat(testTaxpayer_request.getBuyer_full_name()).isEqualTo(UPDATED_BUYER_FULL_NAME);
        assertThat(testTaxpayer_request.getConfirmation_url()).isEqualTo(UPDATED_CONFIRMATION_URL);
        assertThat(testTaxpayer_request.getCurrency()).isEqualTo(UPDATED_CURRENCY);
        assertThat(testTaxpayer_request.getDescription()).isEqualTo(UPDATED_DESCRIPTION);
        assertThat(testTaxpayer_request.getDiscount()).isEqualTo(UPDATED_DISCOUNT);
        assertThat(testTaxpayer_request.getExtra1()).isEqualTo(UPDATED_EXTRA_1);
        assertThat(testTaxpayer_request.getExtra2()).isEqualTo(UPDATED_EXTRA_2);
        assertThat(testTaxpayer_request.getExtra3()).isEqualTo(UPDATED_EXTRA_3);
        assertThat(testTaxpayer_request.getLng()).isEqualTo(UPDATED_LNG);
        assertThat(testTaxpayer_request.getMerchant_id()).isEqualTo(UPDATED_MERCHANT_ID);
        assertThat(testTaxpayer_request.getMobile_phone()).isEqualTo(UPDATED_MOBILE_PHONE);
        assertThat(testTaxpayer_request.getOffice_telephone()).isEqualTo(UPDATED_OFFICE_TELEPHONE);
        assertThat(testTaxpayer_request.getPayer_document()).isEqualTo(UPDATED_PAYER_DOCUMENT);
        assertThat(testTaxpayer_request.getPayer_email()).isEqualTo(UPDATED_PAYER_EMAIL);
        assertThat(testTaxpayer_request.getPayer_full_name()).isEqualTo(UPDATED_PAYER_FULL_NAME);
        assertThat(testTaxpayer_request.getPayer_mobile_phone()).isEqualTo(UPDATED_PAYER_MOBILE_PHONE);
        assertThat(testTaxpayer_request.getPayer_office_phone()).isEqualTo(UPDATED_PAYER_OFFICE_PHONE);
        assertThat(testTaxpayer_request.getPayer_phone()).isEqualTo(UPDATED_PAYER_PHONE);
        assertThat(testTaxpayer_request.getReference_code()).isEqualTo(UPDATED_REFERENCE_CODE);
        assertThat(testTaxpayer_request.getResponse_url()).isEqualTo(UPDATED_RESPONSE_URL);
        assertThat(testTaxpayer_request.getShipping_address()).isEqualTo(UPDATED_SHIPPING_ADDRESS);
        assertThat(testTaxpayer_request.getShipping_city()).isEqualTo(UPDATED_SHIPPING_CITY);
        assertThat(testTaxpayer_request.getShipping_country()).isEqualTo(UPDATED_SHIPPING_COUNTRY);
        assertThat(testTaxpayer_request.getSignature()).isEqualTo(UPDATED_SIGNATURE);
        assertThat(testTaxpayer_request.getTax()).isEqualTo(UPDATED_TAX);
        assertThat(testTaxpayer_request.getTax_return_base()).isEqualTo(UPDATED_TAX_RETURN_BASE);
        assertThat(testTaxpayer_request.getTelephone()).isEqualTo(UPDATED_TELEPHONE);
        assertThat(testTaxpayer_request.getTest()).isEqualTo(UPDATED_TEST);
        assertThat(testTaxpayer_request.getZipcode()).isEqualTo(UPDATED_ZIPCODE);
    }

    @Test
    @Transactional
    public void deleteTaxpayer_request() throws Exception {
        // Initialize the database
        taxpayer_requestService.save(taxpayer_request);

        int databaseSizeBeforeDelete = taxpayer_requestRepository.findAll().size();

        // Get the taxpayer_request
        restTaxpayer_requestMockMvc.perform(delete("/api/taxpayer-requests/{id}", taxpayer_request.getId())
                .accept(TestUtil.APPLICATION_JSON_UTF8))
                .andExpect(status().isOk());

        // Validate the database is empty
        List<Taxpayer_request> taxpayer_requests = taxpayer_requestRepository.findAll();
        assertThat(taxpayer_requests).hasSize(databaseSizeBeforeDelete - 1);
    }
}
