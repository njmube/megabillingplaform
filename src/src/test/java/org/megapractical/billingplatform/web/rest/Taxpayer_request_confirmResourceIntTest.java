package org.megapractical.billingplatform.web.rest;

import org.megapractical.billingplatform.MegabillingplatformApp;
import org.megapractical.billingplatform.domain.Taxpayer_request_confirm;
import org.megapractical.billingplatform.repository.Taxpayer_request_confirmRepository;
import org.megapractical.billingplatform.service.Taxpayer_request_confirmService;

import org.junit.Before;
import org.junit.Test;
import org.junit.runner.RunWith;
import static org.hamcrest.Matchers.hasItem;
import org.mockito.MockitoAnnotations;
import org.springframework.boot.test.IntegrationTest;
import org.springframework.boot.test.SpringApplicationConfiguration;
import org.springframework.http.MediaType;
import org.springframework.http.converter.json.MappingJackson2HttpMessageConverter;
import org.springframework.data.web.PageableHandlerMethodArgumentResolver;
import org.springframework.test.context.junit4.SpringJUnit4ClassRunner;
import org.springframework.test.context.web.WebAppConfiguration;
import org.springframework.test.util.ReflectionTestUtils;
import org.springframework.test.web.servlet.MockMvc;
import org.springframework.test.web.servlet.setup.MockMvcBuilders;
import org.springframework.transaction.annotation.Transactional;

import javax.annotation.PostConstruct;
import javax.inject.Inject;
import java.math.BigDecimal;;
import java.util.List;

import static org.assertj.core.api.Assertions.assertThat;
import static org.springframework.test.web.servlet.request.MockMvcRequestBuilders.*;
import static org.springframework.test.web.servlet.result.MockMvcResultMatchers.*;


/**
 * Test class for the Taxpayer_request_confirmResource REST controller.
 *
 * @see Taxpayer_request_confirmResource
 */
@RunWith(SpringJUnit4ClassRunner.class)
@SpringApplicationConfiguration(classes = MegabillingplatformApp.class)
@WebAppConfiguration
@IntegrationTest
public class Taxpayer_request_confirmResourceIntTest {


    private static final Long DEFAULT_TAXPAYER_REQUEST_ID = 1L;
    private static final Long UPDATED_TAXPAYER_REQUEST_ID = 2L;
    private static final String DEFAULT_ACCOUNT_NUMBER_ACH = "AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA";
    private static final String UPDATED_ACCOUNT_NUMBER_ACH = "BBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBB";
    private static final String DEFAULT_ACCOUNT_TYPE_ACH = "AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA";
    private static final String UPDATED_ACCOUNT_TYPE_ACH = "BBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBB";

    private static final BigDecimal DEFAULT_ADDITIONAL_VALUE = new BigDecimal(1);
    private static final BigDecimal UPDATED_ADDITIONAL_VALUE = new BigDecimal(2);

    private static final BigDecimal DEFAULT_ADMINISTRATIVE_FEE = new BigDecimal(1);
    private static final BigDecimal UPDATED_ADMINISTRATIVE_FEE = new BigDecimal(2);

    private static final BigDecimal DEFAULT_ADMINISTRATIVE_FEE_BASE = new BigDecimal(1);
    private static final BigDecimal UPDATED_ADMINISTRATIVE_FEE_BASE = new BigDecimal(2);

    private static final BigDecimal DEFAULT_ADMINISTRATIVE_FEE_TAX = new BigDecimal(1);
    private static final BigDecimal UPDATED_ADMINISTRATIVE_FEE_TAX = new BigDecimal(2);
    private static final String DEFAULT_AIRLINE_CODE = "AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA";
    private static final String UPDATED_AIRLINE_CODE = "BBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBB";

    private static final Integer DEFAULT_ATTEMPTS = 1;
    private static final Integer UPDATED_ATTEMPTS = 2;
    private static final String DEFAULT_AUTHORIZATION_CODE = "AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA";
    private static final String UPDATED_AUTHORIZATION_CODE = "BBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBB";
    private static final String DEFAULT_BANK_ID = "AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA";
    private static final String UPDATED_BANK_ID = "BBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBB";
    private static final String DEFAULT_BILLING_ADDRESS = "AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA";
    private static final String UPDATED_BILLING_ADDRESS = "BBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBB";
    private static final String DEFAULT_BILLING_CITY = "AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA";
    private static final String UPDATED_BILLING_CITY = "BBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBB";
    private static final String DEFAULT_BILLING_COUNTRY = "AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA";
    private static final String UPDATED_BILLING_COUNTRY = "BBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBB";

    private static final BigDecimal DEFAULT_COMMISION_POL = new BigDecimal(1);
    private static final BigDecimal UPDATED_COMMISION_POL = new BigDecimal(2);
    private static final String DEFAULT_COMMISION_POL_CURRENCY = "AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA";
    private static final String UPDATED_COMMISION_POL_CURRENCY = "BBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBB";
    private static final String DEFAULT_CURRENCY = "AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA";
    private static final String UPDATED_CURRENCY = "BBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBB";
    private static final String DEFAULT_CUS = "AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA";
    private static final String UPDATED_CUS = "BBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBB";

    private static final Integer DEFAULT_CUSTOMER_NUMBER = 1;
    private static final Integer UPDATED_CUSTOMER_NUMBER = 2;
    private static final String DEFAULT_DATE = "AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA";
    private static final String UPDATED_DATE = "BBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBB";
    private static final String DEFAULT_DESCRIPTION = "AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA";
    private static final String UPDATED_DESCRIPTION = "BBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBB";
    private static final String DEFAULT_EMAIL_BUYER = "AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA";
    private static final String UPDATED_EMAIL_BUYER = "BBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBB";
    private static final String DEFAULT_ERROR_CODE_BANK = "AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA";
    private static final String UPDATED_ERROR_CODE_BANK = "BBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBB";
    private static final String DEFAULT_ERROR_MESSAGE_BANK = "AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA";
    private static final String UPDATED_ERROR_MESSAGE_BANK = "BBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBB";

    private static final BigDecimal DEFAULT_EXCHANGE_RATE = new BigDecimal(1);
    private static final BigDecimal UPDATED_EXCHANGE_RATE = new BigDecimal(2);
    private static final String DEFAULT_EXTRA_1 = "AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA";
    private static final String UPDATED_EXTRA_1 = "BBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBB";
    private static final String DEFAULT_EXTRA_2 = "AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA";
    private static final String UPDATED_EXTRA_2 = "BBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBB";

    private static final Integer DEFAULT_INSTALLMENTS_NUMBER = 1;
    private static final Integer UPDATED_INSTALLMENTS_NUMBER = 2;
    private static final String DEFAULT_IP = "AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA";
    private static final String UPDATED_IP = "BBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBB";

    private static final Integer DEFAULT_MERCHANT_ID = 1;
    private static final Integer UPDATED_MERCHANT_ID = 2;
    private static final String DEFAULT_NICKNAME_BUYER = "AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA";
    private static final String UPDATED_NICKNAME_BUYER = "BBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBB";
    private static final String DEFAULT_NICKNAME_SELLER = "AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA";
    private static final String UPDATED_NICKNAME_SELLER = "BBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBB";
    private static final String DEFAULT_OFFICE_PHONE = "AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA";
    private static final String UPDATED_OFFICE_PHONE = "BBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBB";

    private static final Integer DEFAULT_PAYMENT_METHOD = 1;
    private static final Integer UPDATED_PAYMENT_METHOD = 2;

    private static final Integer DEFAULT_PAYMENT_METHOD_ID = 1;
    private static final Integer UPDATED_PAYMENT_METHOD_ID = 2;
    private static final String DEFAULT_PAYMENT_METHOD_NAME = "AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA";
    private static final String UPDATED_PAYMENT_METHOD_NAME = "BBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBB";

    private static final Integer DEFAULT_PAYMENT_METHOD_TYPE = 1;
    private static final Integer UPDATED_PAYMENT_METHOD_TYPE = 2;
    private static final String DEFAULT_PAYMENT_REQUEST_STATE = "AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA";
    private static final String UPDATED_PAYMENT_REQUEST_STATE = "BBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBB";
    private static final String DEFAULT_PHONE = "AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA";
    private static final String UPDATED_PHONE = "BBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBB";
    private static final String DEFAULT_PSE_BANK = "AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA";
    private static final String UPDATED_PSE_BANK = "BBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBB";
    private static final String DEFAULT_PSE_REFERENCE_1 = "AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA";
    private static final String UPDATED_PSE_REFERENCE_1 = "BBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBB";
    private static final String DEFAULT_PSE_REFERENCE_2 = "AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA";
    private static final String UPDATED_PSE_REFERENCE_2 = "BBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBB";
    private static final String DEFAULT_PSE_REFERENCE_3 = "AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA";
    private static final String UPDATED_PSE_REFERENCE_3 = "BBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBB";
    private static final String DEFAULT_REFERENCE_POL = "AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA";
    private static final String UPDATED_REFERENCE_POL = "BBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBB";
    private static final String DEFAULT_REFERENCE_SALE = "AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA";
    private static final String UPDATED_REFERENCE_SALE = "BBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBB";
    private static final String DEFAULT_RESPONSE_CODE_POL = "AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA";
    private static final String UPDATED_RESPONSE_CODE_POL = "BBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBB";
    private static final String DEFAULT_RESPONSE_MESSAGE_POL = "AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA";
    private static final String UPDATED_RESPONSE_MESSAGE_POL = "BBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBB";

    private static final BigDecimal DEFAULT_RISK = new BigDecimal(1);
    private static final BigDecimal UPDATED_RISK = new BigDecimal(2);
    private static final String DEFAULT_SHIPPING_ADDRESS = "AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA";
    private static final String UPDATED_SHIPPING_ADDRESS = "BBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBB";
    private static final String DEFAULT_SHIPPING_CITY = "AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA";
    private static final String UPDATED_SHIPPING_CITY = "BBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBB";
    private static final String DEFAULT_SHIPPING_COUNTRY = "AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA";
    private static final String UPDATED_SHIPPING_COUNTRY = "BBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBB";
    private static final String DEFAULT_SIGN = "AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA";
    private static final String UPDATED_SIGN = "BBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBB";
    private static final String DEFAULT_STATE_POL = "AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA";
    private static final String UPDATED_STATE_POL = "BBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBB";

    private static final BigDecimal DEFAULT_TAX = new BigDecimal(1);
    private static final BigDecimal UPDATED_TAX = new BigDecimal(2);

    private static final Boolean DEFAULT_TEST = false;
    private static final Boolean UPDATED_TEST = true;
    private static final String DEFAULT_TRANSACTION_BANK_ID = "AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA";
    private static final String UPDATED_TRANSACTION_BANK_ID = "BBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBB";
    private static final String DEFAULT_TRANSACTIONDATE = "AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA";
    private static final String UPDATED_TRANSACTIONDATE = "BBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBB";
    private static final String DEFAULT_TRANSACTION_ID = "AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA";
    private static final String UPDATED_TRANSACTION_ID = "BBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBB";

    private static final BigDecimal DEFAULT_VALUE = new BigDecimal(1);
    private static final BigDecimal UPDATED_VALUE = new BigDecimal(2);

    @Inject
    private Taxpayer_request_confirmRepository taxpayer_request_confirmRepository;

    @Inject
    private Taxpayer_request_confirmService taxpayer_request_confirmService;

    @Inject
    private MappingJackson2HttpMessageConverter jacksonMessageConverter;

    @Inject
    private PageableHandlerMethodArgumentResolver pageableArgumentResolver;

    private MockMvc restTaxpayer_request_confirmMockMvc;

    private Taxpayer_request_confirm taxpayer_request_confirm;

    @PostConstruct
    public void setup() {
        MockitoAnnotations.initMocks(this);
        Taxpayer_request_confirmResource taxpayer_request_confirmResource = new Taxpayer_request_confirmResource();
        ReflectionTestUtils.setField(taxpayer_request_confirmResource, "taxpayer_request_confirmService", taxpayer_request_confirmService);
        this.restTaxpayer_request_confirmMockMvc = MockMvcBuilders.standaloneSetup(taxpayer_request_confirmResource)
            .setCustomArgumentResolvers(pageableArgumentResolver)
            .setMessageConverters(jacksonMessageConverter).build();
    }

    @Before
    public void initTest() {
        taxpayer_request_confirm = new Taxpayer_request_confirm();
        taxpayer_request_confirm.setTaxpayer_request_id(DEFAULT_TAXPAYER_REQUEST_ID);
        taxpayer_request_confirm.setAccount_number_ach(DEFAULT_ACCOUNT_NUMBER_ACH);
        taxpayer_request_confirm.setAccount_type_ach(DEFAULT_ACCOUNT_TYPE_ACH);
        taxpayer_request_confirm.setAdditional_value(DEFAULT_ADDITIONAL_VALUE);
        taxpayer_request_confirm.setAdministrative_fee(DEFAULT_ADMINISTRATIVE_FEE);
        taxpayer_request_confirm.setAdministrative_fee_base(DEFAULT_ADMINISTRATIVE_FEE_BASE);
        taxpayer_request_confirm.setAdministrative_fee_tax(DEFAULT_ADMINISTRATIVE_FEE_TAX);
        taxpayer_request_confirm.setAirline_code(DEFAULT_AIRLINE_CODE);
        taxpayer_request_confirm.setAttempts(DEFAULT_ATTEMPTS);
        taxpayer_request_confirm.setAuthorization_code(DEFAULT_AUTHORIZATION_CODE);
        taxpayer_request_confirm.setBank_id(DEFAULT_BANK_ID);
        taxpayer_request_confirm.setBilling_address(DEFAULT_BILLING_ADDRESS);
        taxpayer_request_confirm.setBilling_city(DEFAULT_BILLING_CITY);
        taxpayer_request_confirm.setBilling_country(DEFAULT_BILLING_COUNTRY);
        taxpayer_request_confirm.setCommision_pol(DEFAULT_COMMISION_POL);
        taxpayer_request_confirm.setCommision_pol_currency(DEFAULT_COMMISION_POL_CURRENCY);
        taxpayer_request_confirm.setCurrency(DEFAULT_CURRENCY);
        taxpayer_request_confirm.setCus(DEFAULT_CUS);
        taxpayer_request_confirm.setCustomer_number(DEFAULT_CUSTOMER_NUMBER);
        taxpayer_request_confirm.setDate(DEFAULT_DATE);
        taxpayer_request_confirm.setDescription(DEFAULT_DESCRIPTION);
        taxpayer_request_confirm.setEmail_buyer(DEFAULT_EMAIL_BUYER);
        taxpayer_request_confirm.setError_code_bank(DEFAULT_ERROR_CODE_BANK);
        taxpayer_request_confirm.setError_message_bank(DEFAULT_ERROR_MESSAGE_BANK);
        taxpayer_request_confirm.setExchange_rate(DEFAULT_EXCHANGE_RATE);
        taxpayer_request_confirm.setExtra1(DEFAULT_EXTRA_1);
        taxpayer_request_confirm.setExtra2(DEFAULT_EXTRA_2);
        taxpayer_request_confirm.setInstallments_number(DEFAULT_INSTALLMENTS_NUMBER);
        taxpayer_request_confirm.setIp(DEFAULT_IP);
        taxpayer_request_confirm.setMerchant_id(DEFAULT_MERCHANT_ID);
        taxpayer_request_confirm.setNickname_buyer(DEFAULT_NICKNAME_BUYER);
        taxpayer_request_confirm.setNickname_seller(DEFAULT_NICKNAME_SELLER);
        taxpayer_request_confirm.setOffice_phone(DEFAULT_OFFICE_PHONE);
        taxpayer_request_confirm.setPayment_method(DEFAULT_PAYMENT_METHOD);
        taxpayer_request_confirm.setPayment_method_id(DEFAULT_PAYMENT_METHOD_ID);
        taxpayer_request_confirm.setPayment_method_name(DEFAULT_PAYMENT_METHOD_NAME);
        taxpayer_request_confirm.setPayment_method_type(DEFAULT_PAYMENT_METHOD_TYPE);
        taxpayer_request_confirm.setPayment_request_state(DEFAULT_PAYMENT_REQUEST_STATE);
        taxpayer_request_confirm.setPhone(DEFAULT_PHONE);
        taxpayer_request_confirm.setPse_bank(DEFAULT_PSE_BANK);
        taxpayer_request_confirm.setPse_reference1(DEFAULT_PSE_REFERENCE_1);
        taxpayer_request_confirm.setPse_reference2(DEFAULT_PSE_REFERENCE_2);
        taxpayer_request_confirm.setPse_reference3(DEFAULT_PSE_REFERENCE_3);
        taxpayer_request_confirm.setReference_pol(DEFAULT_REFERENCE_POL);
        taxpayer_request_confirm.setReference_sale(DEFAULT_REFERENCE_SALE);
        taxpayer_request_confirm.setResponse_code_pol(DEFAULT_RESPONSE_CODE_POL);
        taxpayer_request_confirm.setResponse_message_pol(DEFAULT_RESPONSE_MESSAGE_POL);
        taxpayer_request_confirm.setRisk(DEFAULT_RISK);
        taxpayer_request_confirm.setShipping_address(DEFAULT_SHIPPING_ADDRESS);
        taxpayer_request_confirm.setShipping_city(DEFAULT_SHIPPING_CITY);
        taxpayer_request_confirm.setShipping_country(DEFAULT_SHIPPING_COUNTRY);
        taxpayer_request_confirm.setSign(DEFAULT_SIGN);
        taxpayer_request_confirm.setState_pol(DEFAULT_STATE_POL);
        taxpayer_request_confirm.setTax(DEFAULT_TAX);
        taxpayer_request_confirm.setTest(DEFAULT_TEST);
        taxpayer_request_confirm.setTransaction_bank_id(DEFAULT_TRANSACTION_BANK_ID);
        taxpayer_request_confirm.setTransactiondate(DEFAULT_TRANSACTIONDATE);
        taxpayer_request_confirm.setTransaction_id(DEFAULT_TRANSACTION_ID);
        taxpayer_request_confirm.setValue(DEFAULT_VALUE);
    }

    @Test
    @Transactional
    public void createTaxpayer_request_confirm() throws Exception {
        int databaseSizeBeforeCreate = taxpayer_request_confirmRepository.findAll().size();

        // Create the Taxpayer_request_confirm

        restTaxpayer_request_confirmMockMvc.perform(post("/api/taxpayer-request-confirms")
                .contentType(TestUtil.APPLICATION_JSON_UTF8)
                .content(TestUtil.convertObjectToJsonBytes(taxpayer_request_confirm)))
                .andExpect(status().isCreated());

        // Validate the Taxpayer_request_confirm in the database
        List<Taxpayer_request_confirm> taxpayer_request_confirms = taxpayer_request_confirmRepository.findAll();
        assertThat(taxpayer_request_confirms).hasSize(databaseSizeBeforeCreate + 1);
        Taxpayer_request_confirm testTaxpayer_request_confirm = taxpayer_request_confirms.get(taxpayer_request_confirms.size() - 1);
        assertThat(testTaxpayer_request_confirm.getTaxpayer_request_id()).isEqualTo(DEFAULT_TAXPAYER_REQUEST_ID);
        assertThat(testTaxpayer_request_confirm.getAccount_number_ach()).isEqualTo(DEFAULT_ACCOUNT_NUMBER_ACH);
        assertThat(testTaxpayer_request_confirm.getAccount_type_ach()).isEqualTo(DEFAULT_ACCOUNT_TYPE_ACH);
        assertThat(testTaxpayer_request_confirm.getAdditional_value()).isEqualTo(DEFAULT_ADDITIONAL_VALUE);
        assertThat(testTaxpayer_request_confirm.getAdministrative_fee()).isEqualTo(DEFAULT_ADMINISTRATIVE_FEE);
        assertThat(testTaxpayer_request_confirm.getAdministrative_fee_base()).isEqualTo(DEFAULT_ADMINISTRATIVE_FEE_BASE);
        assertThat(testTaxpayer_request_confirm.getAdministrative_fee_tax()).isEqualTo(DEFAULT_ADMINISTRATIVE_FEE_TAX);
        assertThat(testTaxpayer_request_confirm.getAirline_code()).isEqualTo(DEFAULT_AIRLINE_CODE);
        assertThat(testTaxpayer_request_confirm.getAttempts()).isEqualTo(DEFAULT_ATTEMPTS);
        assertThat(testTaxpayer_request_confirm.getAuthorization_code()).isEqualTo(DEFAULT_AUTHORIZATION_CODE);
        assertThat(testTaxpayer_request_confirm.getBank_id()).isEqualTo(DEFAULT_BANK_ID);
        assertThat(testTaxpayer_request_confirm.getBilling_address()).isEqualTo(DEFAULT_BILLING_ADDRESS);
        assertThat(testTaxpayer_request_confirm.getBilling_city()).isEqualTo(DEFAULT_BILLING_CITY);
        assertThat(testTaxpayer_request_confirm.getBilling_country()).isEqualTo(DEFAULT_BILLING_COUNTRY);
        assertThat(testTaxpayer_request_confirm.getCommision_pol()).isEqualTo(DEFAULT_COMMISION_POL);
        assertThat(testTaxpayer_request_confirm.getCommision_pol_currency()).isEqualTo(DEFAULT_COMMISION_POL_CURRENCY);
        assertThat(testTaxpayer_request_confirm.getCurrency()).isEqualTo(DEFAULT_CURRENCY);
        assertThat(testTaxpayer_request_confirm.getCus()).isEqualTo(DEFAULT_CUS);
        assertThat(testTaxpayer_request_confirm.getCustomer_number()).isEqualTo(DEFAULT_CUSTOMER_NUMBER);
        assertThat(testTaxpayer_request_confirm.getDate()).isEqualTo(DEFAULT_DATE);
        assertThat(testTaxpayer_request_confirm.getDescription()).isEqualTo(DEFAULT_DESCRIPTION);
        assertThat(testTaxpayer_request_confirm.getEmail_buyer()).isEqualTo(DEFAULT_EMAIL_BUYER);
        assertThat(testTaxpayer_request_confirm.getError_code_bank()).isEqualTo(DEFAULT_ERROR_CODE_BANK);
        assertThat(testTaxpayer_request_confirm.getError_message_bank()).isEqualTo(DEFAULT_ERROR_MESSAGE_BANK);
        assertThat(testTaxpayer_request_confirm.getExchange_rate()).isEqualTo(DEFAULT_EXCHANGE_RATE);
        assertThat(testTaxpayer_request_confirm.getExtra1()).isEqualTo(DEFAULT_EXTRA_1);
        assertThat(testTaxpayer_request_confirm.getExtra2()).isEqualTo(DEFAULT_EXTRA_2);
        assertThat(testTaxpayer_request_confirm.getInstallments_number()).isEqualTo(DEFAULT_INSTALLMENTS_NUMBER);
        assertThat(testTaxpayer_request_confirm.getIp()).isEqualTo(DEFAULT_IP);
        assertThat(testTaxpayer_request_confirm.getMerchant_id()).isEqualTo(DEFAULT_MERCHANT_ID);
        assertThat(testTaxpayer_request_confirm.getNickname_buyer()).isEqualTo(DEFAULT_NICKNAME_BUYER);
        assertThat(testTaxpayer_request_confirm.getNickname_seller()).isEqualTo(DEFAULT_NICKNAME_SELLER);
        assertThat(testTaxpayer_request_confirm.getOffice_phone()).isEqualTo(DEFAULT_OFFICE_PHONE);
        assertThat(testTaxpayer_request_confirm.getPayment_method()).isEqualTo(DEFAULT_PAYMENT_METHOD);
        assertThat(testTaxpayer_request_confirm.getPayment_method_id()).isEqualTo(DEFAULT_PAYMENT_METHOD_ID);
        assertThat(testTaxpayer_request_confirm.getPayment_method_name()).isEqualTo(DEFAULT_PAYMENT_METHOD_NAME);
        assertThat(testTaxpayer_request_confirm.getPayment_method_type()).isEqualTo(DEFAULT_PAYMENT_METHOD_TYPE);
        assertThat(testTaxpayer_request_confirm.getPayment_request_state()).isEqualTo(DEFAULT_PAYMENT_REQUEST_STATE);
        assertThat(testTaxpayer_request_confirm.getPhone()).isEqualTo(DEFAULT_PHONE);
        assertThat(testTaxpayer_request_confirm.getPse_bank()).isEqualTo(DEFAULT_PSE_BANK);
        assertThat(testTaxpayer_request_confirm.getPse_reference1()).isEqualTo(DEFAULT_PSE_REFERENCE_1);
        assertThat(testTaxpayer_request_confirm.getPse_reference2()).isEqualTo(DEFAULT_PSE_REFERENCE_2);
        assertThat(testTaxpayer_request_confirm.getPse_reference3()).isEqualTo(DEFAULT_PSE_REFERENCE_3);
        assertThat(testTaxpayer_request_confirm.getReference_pol()).isEqualTo(DEFAULT_REFERENCE_POL);
        assertThat(testTaxpayer_request_confirm.getReference_sale()).isEqualTo(DEFAULT_REFERENCE_SALE);
        assertThat(testTaxpayer_request_confirm.getResponse_code_pol()).isEqualTo(DEFAULT_RESPONSE_CODE_POL);
        assertThat(testTaxpayer_request_confirm.getResponse_message_pol()).isEqualTo(DEFAULT_RESPONSE_MESSAGE_POL);
        assertThat(testTaxpayer_request_confirm.getRisk()).isEqualTo(DEFAULT_RISK);
        assertThat(testTaxpayer_request_confirm.getShipping_address()).isEqualTo(DEFAULT_SHIPPING_ADDRESS);
        assertThat(testTaxpayer_request_confirm.getShipping_city()).isEqualTo(DEFAULT_SHIPPING_CITY);
        assertThat(testTaxpayer_request_confirm.getShipping_country()).isEqualTo(DEFAULT_SHIPPING_COUNTRY);
        assertThat(testTaxpayer_request_confirm.getSign()).isEqualTo(DEFAULT_SIGN);
        assertThat(testTaxpayer_request_confirm.getState_pol()).isEqualTo(DEFAULT_STATE_POL);
        assertThat(testTaxpayer_request_confirm.getTax()).isEqualTo(DEFAULT_TAX);
        assertThat(testTaxpayer_request_confirm.isTest()).isEqualTo(DEFAULT_TEST);
        assertThat(testTaxpayer_request_confirm.getTransaction_bank_id()).isEqualTo(DEFAULT_TRANSACTION_BANK_ID);
        assertThat(testTaxpayer_request_confirm.getTransactiondate()).isEqualTo(DEFAULT_TRANSACTIONDATE);
        assertThat(testTaxpayer_request_confirm.getTransaction_id()).isEqualTo(DEFAULT_TRANSACTION_ID);
        assertThat(testTaxpayer_request_confirm.getValue()).isEqualTo(DEFAULT_VALUE);
    }

    @Test
    @Transactional
    public void getAllTaxpayer_request_confirms() throws Exception {
        // Initialize the database
        taxpayer_request_confirmRepository.saveAndFlush(taxpayer_request_confirm);

        // Get all the taxpayer_request_confirms
        restTaxpayer_request_confirmMockMvc.perform(get("/api/taxpayer-request-confirms?sort=id,desc"))
                .andExpect(status().isOk())
                .andExpect(content().contentType(MediaType.APPLICATION_JSON))
                .andExpect(jsonPath("$.[*].id").value(hasItem(taxpayer_request_confirm.getId().intValue())))
                .andExpect(jsonPath("$.[*].taxpayer_request_id").value(hasItem(DEFAULT_TAXPAYER_REQUEST_ID.intValue())))
                .andExpect(jsonPath("$.[*].account_number_ach").value(hasItem(DEFAULT_ACCOUNT_NUMBER_ACH.toString())))
                .andExpect(jsonPath("$.[*].account_type_ach").value(hasItem(DEFAULT_ACCOUNT_TYPE_ACH.toString())))
                .andExpect(jsonPath("$.[*].additional_value").value(hasItem(DEFAULT_ADDITIONAL_VALUE.intValue())))
                .andExpect(jsonPath("$.[*].administrative_fee").value(hasItem(DEFAULT_ADMINISTRATIVE_FEE.intValue())))
                .andExpect(jsonPath("$.[*].administrative_fee_base").value(hasItem(DEFAULT_ADMINISTRATIVE_FEE_BASE.intValue())))
                .andExpect(jsonPath("$.[*].administrative_fee_tax").value(hasItem(DEFAULT_ADMINISTRATIVE_FEE_TAX.intValue())))
                .andExpect(jsonPath("$.[*].airline_code").value(hasItem(DEFAULT_AIRLINE_CODE.toString())))
                .andExpect(jsonPath("$.[*].attempts").value(hasItem(DEFAULT_ATTEMPTS)))
                .andExpect(jsonPath("$.[*].authorization_code").value(hasItem(DEFAULT_AUTHORIZATION_CODE.toString())))
                .andExpect(jsonPath("$.[*].bank_id").value(hasItem(DEFAULT_BANK_ID.toString())))
                .andExpect(jsonPath("$.[*].billing_address").value(hasItem(DEFAULT_BILLING_ADDRESS.toString())))
                .andExpect(jsonPath("$.[*].billing_city").value(hasItem(DEFAULT_BILLING_CITY.toString())))
                .andExpect(jsonPath("$.[*].billing_country").value(hasItem(DEFAULT_BILLING_COUNTRY.toString())))
                .andExpect(jsonPath("$.[*].commision_pol").value(hasItem(DEFAULT_COMMISION_POL.intValue())))
                .andExpect(jsonPath("$.[*].commision_pol_currency").value(hasItem(DEFAULT_COMMISION_POL_CURRENCY.toString())))
                .andExpect(jsonPath("$.[*].currency").value(hasItem(DEFAULT_CURRENCY.toString())))
                .andExpect(jsonPath("$.[*].cus").value(hasItem(DEFAULT_CUS.toString())))
                .andExpect(jsonPath("$.[*].customer_number").value(hasItem(DEFAULT_CUSTOMER_NUMBER)))
                .andExpect(jsonPath("$.[*].date").value(hasItem(DEFAULT_DATE.toString())))
                .andExpect(jsonPath("$.[*].description").value(hasItem(DEFAULT_DESCRIPTION.toString())))
                .andExpect(jsonPath("$.[*].email_buyer").value(hasItem(DEFAULT_EMAIL_BUYER.toString())))
                .andExpect(jsonPath("$.[*].error_code_bank").value(hasItem(DEFAULT_ERROR_CODE_BANK.toString())))
                .andExpect(jsonPath("$.[*].error_message_bank").value(hasItem(DEFAULT_ERROR_MESSAGE_BANK.toString())))
                .andExpect(jsonPath("$.[*].exchange_rate").value(hasItem(DEFAULT_EXCHANGE_RATE.intValue())))
                .andExpect(jsonPath("$.[*].extra1").value(hasItem(DEFAULT_EXTRA_1.toString())))
                .andExpect(jsonPath("$.[*].extra2").value(hasItem(DEFAULT_EXTRA_2.toString())))
                .andExpect(jsonPath("$.[*].installments_number").value(hasItem(DEFAULT_INSTALLMENTS_NUMBER)))
                .andExpect(jsonPath("$.[*].ip").value(hasItem(DEFAULT_IP.toString())))
                .andExpect(jsonPath("$.[*].merchant_id").value(hasItem(DEFAULT_MERCHANT_ID)))
                .andExpect(jsonPath("$.[*].nickname_buyer").value(hasItem(DEFAULT_NICKNAME_BUYER.toString())))
                .andExpect(jsonPath("$.[*].nickname_seller").value(hasItem(DEFAULT_NICKNAME_SELLER.toString())))
                .andExpect(jsonPath("$.[*].office_phone").value(hasItem(DEFAULT_OFFICE_PHONE.toString())))
                .andExpect(jsonPath("$.[*].payment_method").value(hasItem(DEFAULT_PAYMENT_METHOD)))
                .andExpect(jsonPath("$.[*].payment_method_id").value(hasItem(DEFAULT_PAYMENT_METHOD_ID)))
                .andExpect(jsonPath("$.[*].payment_method_name").value(hasItem(DEFAULT_PAYMENT_METHOD_NAME.toString())))
                .andExpect(jsonPath("$.[*].payment_method_type").value(hasItem(DEFAULT_PAYMENT_METHOD_TYPE)))
                .andExpect(jsonPath("$.[*].payment_request_state").value(hasItem(DEFAULT_PAYMENT_REQUEST_STATE.toString())))
                .andExpect(jsonPath("$.[*].phone").value(hasItem(DEFAULT_PHONE.toString())))
                .andExpect(jsonPath("$.[*].pse_bank").value(hasItem(DEFAULT_PSE_BANK.toString())))
                .andExpect(jsonPath("$.[*].pse_reference1").value(hasItem(DEFAULT_PSE_REFERENCE_1.toString())))
                .andExpect(jsonPath("$.[*].pse_reference2").value(hasItem(DEFAULT_PSE_REFERENCE_2.toString())))
                .andExpect(jsonPath("$.[*].pse_reference3").value(hasItem(DEFAULT_PSE_REFERENCE_3.toString())))
                .andExpect(jsonPath("$.[*].reference_pol").value(hasItem(DEFAULT_REFERENCE_POL.toString())))
                .andExpect(jsonPath("$.[*].reference_sale").value(hasItem(DEFAULT_REFERENCE_SALE.toString())))
                .andExpect(jsonPath("$.[*].response_code_pol").value(hasItem(DEFAULT_RESPONSE_CODE_POL.toString())))
                .andExpect(jsonPath("$.[*].response_message_pol").value(hasItem(DEFAULT_RESPONSE_MESSAGE_POL.toString())))
                .andExpect(jsonPath("$.[*].risk").value(hasItem(DEFAULT_RISK.intValue())))
                .andExpect(jsonPath("$.[*].shipping_address").value(hasItem(DEFAULT_SHIPPING_ADDRESS.toString())))
                .andExpect(jsonPath("$.[*].shipping_city").value(hasItem(DEFAULT_SHIPPING_CITY.toString())))
                .andExpect(jsonPath("$.[*].shipping_country").value(hasItem(DEFAULT_SHIPPING_COUNTRY.toString())))
                .andExpect(jsonPath("$.[*].sign").value(hasItem(DEFAULT_SIGN.toString())))
                .andExpect(jsonPath("$.[*].state_pol").value(hasItem(DEFAULT_STATE_POL.toString())))
                .andExpect(jsonPath("$.[*].tax").value(hasItem(DEFAULT_TAX.intValue())))
                .andExpect(jsonPath("$.[*].test").value(hasItem(DEFAULT_TEST.booleanValue())))
                .andExpect(jsonPath("$.[*].transaction_bank_id").value(hasItem(DEFAULT_TRANSACTION_BANK_ID.toString())))
                .andExpect(jsonPath("$.[*].transactiondate").value(hasItem(DEFAULT_TRANSACTIONDATE.toString())))
                .andExpect(jsonPath("$.[*].transaction_id").value(hasItem(DEFAULT_TRANSACTION_ID.toString())))
                .andExpect(jsonPath("$.[*].value").value(hasItem(DEFAULT_VALUE.intValue())));
    }

    @Test
    @Transactional
    public void getTaxpayer_request_confirm() throws Exception {
        // Initialize the database
        taxpayer_request_confirmRepository.saveAndFlush(taxpayer_request_confirm);

        // Get the taxpayer_request_confirm
        restTaxpayer_request_confirmMockMvc.perform(get("/api/taxpayer-request-confirms/{id}", taxpayer_request_confirm.getId()))
            .andExpect(status().isOk())
            .andExpect(content().contentType(MediaType.APPLICATION_JSON))
            .andExpect(jsonPath("$.id").value(taxpayer_request_confirm.getId().intValue()))
            .andExpect(jsonPath("$.taxpayer_request_id").value(DEFAULT_TAXPAYER_REQUEST_ID.intValue()))
            .andExpect(jsonPath("$.account_number_ach").value(DEFAULT_ACCOUNT_NUMBER_ACH.toString()))
            .andExpect(jsonPath("$.account_type_ach").value(DEFAULT_ACCOUNT_TYPE_ACH.toString()))
            .andExpect(jsonPath("$.additional_value").value(DEFAULT_ADDITIONAL_VALUE.intValue()))
            .andExpect(jsonPath("$.administrative_fee").value(DEFAULT_ADMINISTRATIVE_FEE.intValue()))
            .andExpect(jsonPath("$.administrative_fee_base").value(DEFAULT_ADMINISTRATIVE_FEE_BASE.intValue()))
            .andExpect(jsonPath("$.administrative_fee_tax").value(DEFAULT_ADMINISTRATIVE_FEE_TAX.intValue()))
            .andExpect(jsonPath("$.airline_code").value(DEFAULT_AIRLINE_CODE.toString()))
            .andExpect(jsonPath("$.attempts").value(DEFAULT_ATTEMPTS))
            .andExpect(jsonPath("$.authorization_code").value(DEFAULT_AUTHORIZATION_CODE.toString()))
            .andExpect(jsonPath("$.bank_id").value(DEFAULT_BANK_ID.toString()))
            .andExpect(jsonPath("$.billing_address").value(DEFAULT_BILLING_ADDRESS.toString()))
            .andExpect(jsonPath("$.billing_city").value(DEFAULT_BILLING_CITY.toString()))
            .andExpect(jsonPath("$.billing_country").value(DEFAULT_BILLING_COUNTRY.toString()))
            .andExpect(jsonPath("$.commision_pol").value(DEFAULT_COMMISION_POL.intValue()))
            .andExpect(jsonPath("$.commision_pol_currency").value(DEFAULT_COMMISION_POL_CURRENCY.toString()))
            .andExpect(jsonPath("$.currency").value(DEFAULT_CURRENCY.toString()))
            .andExpect(jsonPath("$.cus").value(DEFAULT_CUS.toString()))
            .andExpect(jsonPath("$.customer_number").value(DEFAULT_CUSTOMER_NUMBER))
            .andExpect(jsonPath("$.date").value(DEFAULT_DATE.toString()))
            .andExpect(jsonPath("$.description").value(DEFAULT_DESCRIPTION.toString()))
            .andExpect(jsonPath("$.email_buyer").value(DEFAULT_EMAIL_BUYER.toString()))
            .andExpect(jsonPath("$.error_code_bank").value(DEFAULT_ERROR_CODE_BANK.toString()))
            .andExpect(jsonPath("$.error_message_bank").value(DEFAULT_ERROR_MESSAGE_BANK.toString()))
            .andExpect(jsonPath("$.exchange_rate").value(DEFAULT_EXCHANGE_RATE.intValue()))
            .andExpect(jsonPath("$.extra1").value(DEFAULT_EXTRA_1.toString()))
            .andExpect(jsonPath("$.extra2").value(DEFAULT_EXTRA_2.toString()))
            .andExpect(jsonPath("$.installments_number").value(DEFAULT_INSTALLMENTS_NUMBER))
            .andExpect(jsonPath("$.ip").value(DEFAULT_IP.toString()))
            .andExpect(jsonPath("$.merchant_id").value(DEFAULT_MERCHANT_ID))
            .andExpect(jsonPath("$.nickname_buyer").value(DEFAULT_NICKNAME_BUYER.toString()))
            .andExpect(jsonPath("$.nickname_seller").value(DEFAULT_NICKNAME_SELLER.toString()))
            .andExpect(jsonPath("$.office_phone").value(DEFAULT_OFFICE_PHONE.toString()))
            .andExpect(jsonPath("$.payment_method").value(DEFAULT_PAYMENT_METHOD))
            .andExpect(jsonPath("$.payment_method_id").value(DEFAULT_PAYMENT_METHOD_ID))
            .andExpect(jsonPath("$.payment_method_name").value(DEFAULT_PAYMENT_METHOD_NAME.toString()))
            .andExpect(jsonPath("$.payment_method_type").value(DEFAULT_PAYMENT_METHOD_TYPE))
            .andExpect(jsonPath("$.payment_request_state").value(DEFAULT_PAYMENT_REQUEST_STATE.toString()))
            .andExpect(jsonPath("$.phone").value(DEFAULT_PHONE.toString()))
            .andExpect(jsonPath("$.pse_bank").value(DEFAULT_PSE_BANK.toString()))
            .andExpect(jsonPath("$.pse_reference1").value(DEFAULT_PSE_REFERENCE_1.toString()))
            .andExpect(jsonPath("$.pse_reference2").value(DEFAULT_PSE_REFERENCE_2.toString()))
            .andExpect(jsonPath("$.pse_reference3").value(DEFAULT_PSE_REFERENCE_3.toString()))
            .andExpect(jsonPath("$.reference_pol").value(DEFAULT_REFERENCE_POL.toString()))
            .andExpect(jsonPath("$.reference_sale").value(DEFAULT_REFERENCE_SALE.toString()))
            .andExpect(jsonPath("$.response_code_pol").value(DEFAULT_RESPONSE_CODE_POL.toString()))
            .andExpect(jsonPath("$.response_message_pol").value(DEFAULT_RESPONSE_MESSAGE_POL.toString()))
            .andExpect(jsonPath("$.risk").value(DEFAULT_RISK.intValue()))
            .andExpect(jsonPath("$.shipping_address").value(DEFAULT_SHIPPING_ADDRESS.toString()))
            .andExpect(jsonPath("$.shipping_city").value(DEFAULT_SHIPPING_CITY.toString()))
            .andExpect(jsonPath("$.shipping_country").value(DEFAULT_SHIPPING_COUNTRY.toString()))
            .andExpect(jsonPath("$.sign").value(DEFAULT_SIGN.toString()))
            .andExpect(jsonPath("$.state_pol").value(DEFAULT_STATE_POL.toString()))
            .andExpect(jsonPath("$.tax").value(DEFAULT_TAX.intValue()))
            .andExpect(jsonPath("$.test").value(DEFAULT_TEST.booleanValue()))
            .andExpect(jsonPath("$.transaction_bank_id").value(DEFAULT_TRANSACTION_BANK_ID.toString()))
            .andExpect(jsonPath("$.transactiondate").value(DEFAULT_TRANSACTIONDATE.toString()))
            .andExpect(jsonPath("$.transaction_id").value(DEFAULT_TRANSACTION_ID.toString()))
            .andExpect(jsonPath("$.value").value(DEFAULT_VALUE.intValue()));
    }

    @Test
    @Transactional
    public void getNonExistingTaxpayer_request_confirm() throws Exception {
        // Get the taxpayer_request_confirm
        restTaxpayer_request_confirmMockMvc.perform(get("/api/taxpayer-request-confirms/{id}", Long.MAX_VALUE))
                .andExpect(status().isNotFound());
    }

    @Test
    @Transactional
    public void updateTaxpayer_request_confirm() throws Exception {
        // Initialize the database
        taxpayer_request_confirmService.save(taxpayer_request_confirm);

        int databaseSizeBeforeUpdate = taxpayer_request_confirmRepository.findAll().size();

        // Update the taxpayer_request_confirm
        Taxpayer_request_confirm updatedTaxpayer_request_confirm = new Taxpayer_request_confirm();
        updatedTaxpayer_request_confirm.setId(taxpayer_request_confirm.getId());
        updatedTaxpayer_request_confirm.setTaxpayer_request_id(UPDATED_TAXPAYER_REQUEST_ID);
        updatedTaxpayer_request_confirm.setAccount_number_ach(UPDATED_ACCOUNT_NUMBER_ACH);
        updatedTaxpayer_request_confirm.setAccount_type_ach(UPDATED_ACCOUNT_TYPE_ACH);
        updatedTaxpayer_request_confirm.setAdditional_value(UPDATED_ADDITIONAL_VALUE);
        updatedTaxpayer_request_confirm.setAdministrative_fee(UPDATED_ADMINISTRATIVE_FEE);
        updatedTaxpayer_request_confirm.setAdministrative_fee_base(UPDATED_ADMINISTRATIVE_FEE_BASE);
        updatedTaxpayer_request_confirm.setAdministrative_fee_tax(UPDATED_ADMINISTRATIVE_FEE_TAX);
        updatedTaxpayer_request_confirm.setAirline_code(UPDATED_AIRLINE_CODE);
        updatedTaxpayer_request_confirm.setAttempts(UPDATED_ATTEMPTS);
        updatedTaxpayer_request_confirm.setAuthorization_code(UPDATED_AUTHORIZATION_CODE);
        updatedTaxpayer_request_confirm.setBank_id(UPDATED_BANK_ID);
        updatedTaxpayer_request_confirm.setBilling_address(UPDATED_BILLING_ADDRESS);
        updatedTaxpayer_request_confirm.setBilling_city(UPDATED_BILLING_CITY);
        updatedTaxpayer_request_confirm.setBilling_country(UPDATED_BILLING_COUNTRY);
        updatedTaxpayer_request_confirm.setCommision_pol(UPDATED_COMMISION_POL);
        updatedTaxpayer_request_confirm.setCommision_pol_currency(UPDATED_COMMISION_POL_CURRENCY);
        updatedTaxpayer_request_confirm.setCurrency(UPDATED_CURRENCY);
        updatedTaxpayer_request_confirm.setCus(UPDATED_CUS);
        updatedTaxpayer_request_confirm.setCustomer_number(UPDATED_CUSTOMER_NUMBER);
        updatedTaxpayer_request_confirm.setDate(UPDATED_DATE);
        updatedTaxpayer_request_confirm.setDescription(UPDATED_DESCRIPTION);
        updatedTaxpayer_request_confirm.setEmail_buyer(UPDATED_EMAIL_BUYER);
        updatedTaxpayer_request_confirm.setError_code_bank(UPDATED_ERROR_CODE_BANK);
        updatedTaxpayer_request_confirm.setError_message_bank(UPDATED_ERROR_MESSAGE_BANK);
        updatedTaxpayer_request_confirm.setExchange_rate(UPDATED_EXCHANGE_RATE);
        updatedTaxpayer_request_confirm.setExtra1(UPDATED_EXTRA_1);
        updatedTaxpayer_request_confirm.setExtra2(UPDATED_EXTRA_2);
        updatedTaxpayer_request_confirm.setInstallments_number(UPDATED_INSTALLMENTS_NUMBER);
        updatedTaxpayer_request_confirm.setIp(UPDATED_IP);
        updatedTaxpayer_request_confirm.setMerchant_id(UPDATED_MERCHANT_ID);
        updatedTaxpayer_request_confirm.setNickname_buyer(UPDATED_NICKNAME_BUYER);
        updatedTaxpayer_request_confirm.setNickname_seller(UPDATED_NICKNAME_SELLER);
        updatedTaxpayer_request_confirm.setOffice_phone(UPDATED_OFFICE_PHONE);
        updatedTaxpayer_request_confirm.setPayment_method(UPDATED_PAYMENT_METHOD);
        updatedTaxpayer_request_confirm.setPayment_method_id(UPDATED_PAYMENT_METHOD_ID);
        updatedTaxpayer_request_confirm.setPayment_method_name(UPDATED_PAYMENT_METHOD_NAME);
        updatedTaxpayer_request_confirm.setPayment_method_type(UPDATED_PAYMENT_METHOD_TYPE);
        updatedTaxpayer_request_confirm.setPayment_request_state(UPDATED_PAYMENT_REQUEST_STATE);
        updatedTaxpayer_request_confirm.setPhone(UPDATED_PHONE);
        updatedTaxpayer_request_confirm.setPse_bank(UPDATED_PSE_BANK);
        updatedTaxpayer_request_confirm.setPse_reference1(UPDATED_PSE_REFERENCE_1);
        updatedTaxpayer_request_confirm.setPse_reference2(UPDATED_PSE_REFERENCE_2);
        updatedTaxpayer_request_confirm.setPse_reference3(UPDATED_PSE_REFERENCE_3);
        updatedTaxpayer_request_confirm.setReference_pol(UPDATED_REFERENCE_POL);
        updatedTaxpayer_request_confirm.setReference_sale(UPDATED_REFERENCE_SALE);
        updatedTaxpayer_request_confirm.setResponse_code_pol(UPDATED_RESPONSE_CODE_POL);
        updatedTaxpayer_request_confirm.setResponse_message_pol(UPDATED_RESPONSE_MESSAGE_POL);
        updatedTaxpayer_request_confirm.setRisk(UPDATED_RISK);
        updatedTaxpayer_request_confirm.setShipping_address(UPDATED_SHIPPING_ADDRESS);
        updatedTaxpayer_request_confirm.setShipping_city(UPDATED_SHIPPING_CITY);
        updatedTaxpayer_request_confirm.setShipping_country(UPDATED_SHIPPING_COUNTRY);
        updatedTaxpayer_request_confirm.setSign(UPDATED_SIGN);
        updatedTaxpayer_request_confirm.setState_pol(UPDATED_STATE_POL);
        updatedTaxpayer_request_confirm.setTax(UPDATED_TAX);
        updatedTaxpayer_request_confirm.setTest(UPDATED_TEST);
        updatedTaxpayer_request_confirm.setTransaction_bank_id(UPDATED_TRANSACTION_BANK_ID);
        updatedTaxpayer_request_confirm.setTransactiondate(UPDATED_TRANSACTIONDATE);
        updatedTaxpayer_request_confirm.setTransaction_id(UPDATED_TRANSACTION_ID);
        updatedTaxpayer_request_confirm.setValue(UPDATED_VALUE);

        restTaxpayer_request_confirmMockMvc.perform(put("/api/taxpayer-request-confirms")
                .contentType(TestUtil.APPLICATION_JSON_UTF8)
                .content(TestUtil.convertObjectToJsonBytes(updatedTaxpayer_request_confirm)))
                .andExpect(status().isOk());

        // Validate the Taxpayer_request_confirm in the database
        List<Taxpayer_request_confirm> taxpayer_request_confirms = taxpayer_request_confirmRepository.findAll();
        assertThat(taxpayer_request_confirms).hasSize(databaseSizeBeforeUpdate);
        Taxpayer_request_confirm testTaxpayer_request_confirm = taxpayer_request_confirms.get(taxpayer_request_confirms.size() - 1);
        assertThat(testTaxpayer_request_confirm.getTaxpayer_request_id()).isEqualTo(UPDATED_TAXPAYER_REQUEST_ID);
        assertThat(testTaxpayer_request_confirm.getAccount_number_ach()).isEqualTo(UPDATED_ACCOUNT_NUMBER_ACH);
        assertThat(testTaxpayer_request_confirm.getAccount_type_ach()).isEqualTo(UPDATED_ACCOUNT_TYPE_ACH);
        assertThat(testTaxpayer_request_confirm.getAdditional_value()).isEqualTo(UPDATED_ADDITIONAL_VALUE);
        assertThat(testTaxpayer_request_confirm.getAdministrative_fee()).isEqualTo(UPDATED_ADMINISTRATIVE_FEE);
        assertThat(testTaxpayer_request_confirm.getAdministrative_fee_base()).isEqualTo(UPDATED_ADMINISTRATIVE_FEE_BASE);
        assertThat(testTaxpayer_request_confirm.getAdministrative_fee_tax()).isEqualTo(UPDATED_ADMINISTRATIVE_FEE_TAX);
        assertThat(testTaxpayer_request_confirm.getAirline_code()).isEqualTo(UPDATED_AIRLINE_CODE);
        assertThat(testTaxpayer_request_confirm.getAttempts()).isEqualTo(UPDATED_ATTEMPTS);
        assertThat(testTaxpayer_request_confirm.getAuthorization_code()).isEqualTo(UPDATED_AUTHORIZATION_CODE);
        assertThat(testTaxpayer_request_confirm.getBank_id()).isEqualTo(UPDATED_BANK_ID);
        assertThat(testTaxpayer_request_confirm.getBilling_address()).isEqualTo(UPDATED_BILLING_ADDRESS);
        assertThat(testTaxpayer_request_confirm.getBilling_city()).isEqualTo(UPDATED_BILLING_CITY);
        assertThat(testTaxpayer_request_confirm.getBilling_country()).isEqualTo(UPDATED_BILLING_COUNTRY);
        assertThat(testTaxpayer_request_confirm.getCommision_pol()).isEqualTo(UPDATED_COMMISION_POL);
        assertThat(testTaxpayer_request_confirm.getCommision_pol_currency()).isEqualTo(UPDATED_COMMISION_POL_CURRENCY);
        assertThat(testTaxpayer_request_confirm.getCurrency()).isEqualTo(UPDATED_CURRENCY);
        assertThat(testTaxpayer_request_confirm.getCus()).isEqualTo(UPDATED_CUS);
        assertThat(testTaxpayer_request_confirm.getCustomer_number()).isEqualTo(UPDATED_CUSTOMER_NUMBER);
        assertThat(testTaxpayer_request_confirm.getDate()).isEqualTo(UPDATED_DATE);
        assertThat(testTaxpayer_request_confirm.getDescription()).isEqualTo(UPDATED_DESCRIPTION);
        assertThat(testTaxpayer_request_confirm.getEmail_buyer()).isEqualTo(UPDATED_EMAIL_BUYER);
        assertThat(testTaxpayer_request_confirm.getError_code_bank()).isEqualTo(UPDATED_ERROR_CODE_BANK);
        assertThat(testTaxpayer_request_confirm.getError_message_bank()).isEqualTo(UPDATED_ERROR_MESSAGE_BANK);
        assertThat(testTaxpayer_request_confirm.getExchange_rate()).isEqualTo(UPDATED_EXCHANGE_RATE);
        assertThat(testTaxpayer_request_confirm.getExtra1()).isEqualTo(UPDATED_EXTRA_1);
        assertThat(testTaxpayer_request_confirm.getExtra2()).isEqualTo(UPDATED_EXTRA_2);
        assertThat(testTaxpayer_request_confirm.getInstallments_number()).isEqualTo(UPDATED_INSTALLMENTS_NUMBER);
        assertThat(testTaxpayer_request_confirm.getIp()).isEqualTo(UPDATED_IP);
        assertThat(testTaxpayer_request_confirm.getMerchant_id()).isEqualTo(UPDATED_MERCHANT_ID);
        assertThat(testTaxpayer_request_confirm.getNickname_buyer()).isEqualTo(UPDATED_NICKNAME_BUYER);
        assertThat(testTaxpayer_request_confirm.getNickname_seller()).isEqualTo(UPDATED_NICKNAME_SELLER);
        assertThat(testTaxpayer_request_confirm.getOffice_phone()).isEqualTo(UPDATED_OFFICE_PHONE);
        assertThat(testTaxpayer_request_confirm.getPayment_method()).isEqualTo(UPDATED_PAYMENT_METHOD);
        assertThat(testTaxpayer_request_confirm.getPayment_method_id()).isEqualTo(UPDATED_PAYMENT_METHOD_ID);
        assertThat(testTaxpayer_request_confirm.getPayment_method_name()).isEqualTo(UPDATED_PAYMENT_METHOD_NAME);
        assertThat(testTaxpayer_request_confirm.getPayment_method_type()).isEqualTo(UPDATED_PAYMENT_METHOD_TYPE);
        assertThat(testTaxpayer_request_confirm.getPayment_request_state()).isEqualTo(UPDATED_PAYMENT_REQUEST_STATE);
        assertThat(testTaxpayer_request_confirm.getPhone()).isEqualTo(UPDATED_PHONE);
        assertThat(testTaxpayer_request_confirm.getPse_bank()).isEqualTo(UPDATED_PSE_BANK);
        assertThat(testTaxpayer_request_confirm.getPse_reference1()).isEqualTo(UPDATED_PSE_REFERENCE_1);
        assertThat(testTaxpayer_request_confirm.getPse_reference2()).isEqualTo(UPDATED_PSE_REFERENCE_2);
        assertThat(testTaxpayer_request_confirm.getPse_reference3()).isEqualTo(UPDATED_PSE_REFERENCE_3);
        assertThat(testTaxpayer_request_confirm.getReference_pol()).isEqualTo(UPDATED_REFERENCE_POL);
        assertThat(testTaxpayer_request_confirm.getReference_sale()).isEqualTo(UPDATED_REFERENCE_SALE);
        assertThat(testTaxpayer_request_confirm.getResponse_code_pol()).isEqualTo(UPDATED_RESPONSE_CODE_POL);
        assertThat(testTaxpayer_request_confirm.getResponse_message_pol()).isEqualTo(UPDATED_RESPONSE_MESSAGE_POL);
        assertThat(testTaxpayer_request_confirm.getRisk()).isEqualTo(UPDATED_RISK);
        assertThat(testTaxpayer_request_confirm.getShipping_address()).isEqualTo(UPDATED_SHIPPING_ADDRESS);
        assertThat(testTaxpayer_request_confirm.getShipping_city()).isEqualTo(UPDATED_SHIPPING_CITY);
        assertThat(testTaxpayer_request_confirm.getShipping_country()).isEqualTo(UPDATED_SHIPPING_COUNTRY);
        assertThat(testTaxpayer_request_confirm.getSign()).isEqualTo(UPDATED_SIGN);
        assertThat(testTaxpayer_request_confirm.getState_pol()).isEqualTo(UPDATED_STATE_POL);
        assertThat(testTaxpayer_request_confirm.getTax()).isEqualTo(UPDATED_TAX);
        assertThat(testTaxpayer_request_confirm.isTest()).isEqualTo(UPDATED_TEST);
        assertThat(testTaxpayer_request_confirm.getTransaction_bank_id()).isEqualTo(UPDATED_TRANSACTION_BANK_ID);
        assertThat(testTaxpayer_request_confirm.getTransactiondate()).isEqualTo(UPDATED_TRANSACTIONDATE);
        assertThat(testTaxpayer_request_confirm.getTransaction_id()).isEqualTo(UPDATED_TRANSACTION_ID);
        assertThat(testTaxpayer_request_confirm.getValue()).isEqualTo(UPDATED_VALUE);
    }

    @Test
    @Transactional
    public void deleteTaxpayer_request_confirm() throws Exception {
        // Initialize the database
        taxpayer_request_confirmService.save(taxpayer_request_confirm);

        int databaseSizeBeforeDelete = taxpayer_request_confirmRepository.findAll().size();

        // Get the taxpayer_request_confirm
        restTaxpayer_request_confirmMockMvc.perform(delete("/api/taxpayer-request-confirms/{id}", taxpayer_request_confirm.getId())
                .accept(TestUtil.APPLICATION_JSON_UTF8))
                .andExpect(status().isOk());

        // Validate the database is empty
        List<Taxpayer_request_confirm> taxpayer_request_confirms = taxpayer_request_confirmRepository.findAll();
        assertThat(taxpayer_request_confirms).hasSize(databaseSizeBeforeDelete - 1);
    }
}
